name: Build & Deploy AMI with packer

env:
  ARTIFACT_NAME: csye6225-webapp-${{ github.sha }}.zip
  CODEDEPLOY_APPLICATION_NAME: csye6225-webapp
  CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME: csye6225-webapp-deployment
  AWS_REGION: us-east-1

  # AWS_ACCESS_KEY : ${{secrets.AWS_ACCESS_KEY}}
  # AWS_SECRET_KEY: ${{secrets.AWS_SECRET_KEY}}
  # S3_AWS_ACCESS_KEY: ${{secrets.S3_AWS_ACCESS_KEY}}
  # S3_AWS_SECRET_KEY: ${{secrets.S3_AWS_SECRET_KEY}}
  # PACKER_LOG: 1

on:
  pull_request:
    branches: [ main ]
    types: [ closed ] 

  workflow_dispatch:

jobs:
  packer:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
       
      - name: Validate Template 
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: "-syntax-only"
          target: ami.pkr.hcl

      - name: Build Artifact with Maven
        run: |
          mvn clean install -DskipTests 
          
      # - name: Build Ami
      #   run: |
      #     ls
      #     packer init .
      #     packer build -on-error=abort -force -var aws_access_key=${{secrets.AWS_ACCESS_KEY}} -var aws_secret_key=${{secrets.AWS_SECRET_KEY}} ami.pkr.hcl

      - name: Build Deployment Artifact
        run: |
          mkdir codedeploy_artifact
          pwd
          zip -r ${{ env.ARTIFACT_NAME }} target/webservice-0.0.1-SNAPSHOT.jar codedeploy/*.sh appsepc.yml
          ls -al
          mv ${{ env.ARTIFACT_NAME }} codedeploy_artifact/
          pwd
          ls codedeploy_artifact/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Upload jar-file to CodeDeploy S3 bucket
        run: |
          aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}


      - name: CodeDeploy API call
        run: |
          output=$(aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ env.CODEDEPLOY_APPLICATION_DEPLOYMENT_GROUP_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --description CodeDeploy-without-autoScalling \
            --s3-location bucket=s3://${{ secrets.S3_CODEDEPLOY_BUCKET }},key=${{ env.ARTIFACT_NAME }},bundleType=zip \
            --region ${{ env.AWS_REGION }} \
            --output json)

            echo $output 
            sudo apt-get update -y
            sudo apt-get install jq

            dId=$(echo $output | jq -r '.deploymentId')
            aws deploy wait deployment-successful --deployment-id $dId

      